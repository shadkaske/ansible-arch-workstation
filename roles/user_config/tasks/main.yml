---
- name: Ensure Local Share Exists
  ansible.builtin.file:
    state: directory
    recurse: true
    path: '{{ share_path }}'
    owner: '{{ ansible_ssh_user }}'
    group: '{{ ansible_ssh_user }}'
    mode: '0755'

- name: Ensure Local Bin Exists
  ansible.builtin.file:
    state: directory
    recurse: true
    path: '{{ bin_path }}'
    owner: '{{ ansible_ssh_user }}'
    group: '{{ ansible_ssh_user }}'
    mode: '0755'

- name: Install xdg-user-dirs and required packages
  tags: user_required
  community.general.pacman:
    state: present
    package: [xdg-user-dirs, python-virtualenv]

- name: Create User Directories
  become: false
  ansible.builtin.command:
    cmd: /usr/bin/xdg-user-dirs-update
    creates: '{{ ansible_env.HOME }}/.config/user-dirs.dirs'

- name: Install Flatpaks
  tags: flatpaks
  ansible.builtin.include_tasks: flatpak.yml

- name: Set authorized keys from Github
  ignore_errors: true
  tags: skip_ansible_lint
  ansible.posix.authorized_key:
    user: '{{ ansible_ssh_user }}'
    state: present
    key: https://github.com/{{ ansible_ssh_user }}.keys

- name: Intelephense License Key
  tags: intelephense
  block:
    - name: Create intelephense directcory
      ansible.builtin.file:
        state: directory
        path: "/home/{{ ansible_ssh_user }}/intelephense"
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: "0775"

    - name: Create licence.txt file for Intelephense
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_ssh_user }}/intelephense/licence.txt"
        create: true
        line: "{{ intelephense_key }}"
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: "0664"

- name: Clone Dotfiles
  tags: dotfiles
  become: false
  ansible.builtin.git:
    repo: git@github.com:shadkaske/dotfiles
    dest: '{{ dotfiles_path }}'
    update: true
    accept_hostkey: true
    force: true
    version: master

- name: Set Up Shell Configs
  tags: shell
  ansible.builtin.include_tasks: shell.yml

- name: Setup Tmux
  tags: tmux
  ansible.builtin.include_tasks: tmux.yml

- name: Set Up ranger
  tags: ranger
  ansible.builtin.include_tasks: ranger.yml

- name: Set User Shell to Zsh and Add groups
  tags: shell
  ansible.builtin.user:
    name: '{{ ansible_ssh_user }}'
    groups: docker,libvirt,qemu,libvirt-qemu
    append: true
    shell: /bin/zsh

- name: Install User Aur Packages
  become: false
  kewlfft.aur.aur:
    state: present
    name: [gitflow-avh, rofi-lbonn-wayland]

- name: Stow Rofi Config
  ansible.builtin.command:
    cmd: /usr/bin/stow rofi
    chdir: '{{ dotfiles_path }}'
    creates: '{{ config_path }}/rofi'

- name: Set Up Dev Environments
  tags: code, skip_ansible_lint
  block:
    - name: Clone Code Repositories
      become: false
      ansible.builtin.git:
        repo: '{{ item.repo }}'
        dest: /home/{{ ansible_ssh_user }}/Code/{{ item.name }}
        clone: true
        update: false
        version: '{{ item.branch }}'
        accept_newhostkey: true
      with_items: '{{ code_repositories }}'

    - name: Set up Hosts Keys for Repositories with Domains
      tags: hosts_entries
      ansible.builtin.lineinfile:
        path: /etc/hosts
        state: present
        line: "127.0.0.1    {{ item.domain }}"
      when: item.domain != None
      with_items: "{{ code_repositories }}"
# vim: ft=yaml.ansible
